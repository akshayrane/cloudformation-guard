name: Deploy to ECR

on:
  push:
    branches: [ docker ]

jobs:

  build:
    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: ${{ secrets.ROLE_NAME }}
        role-session-name: PublishToElasticContainerRegistry

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: aws-cloudformation/cfn-guard
      run: |
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        git_branch=${GITHUB_REF#refs/heads/}
        commit_hash=${git_branch}.${git_hash}
        
        prefix=$REGISTRY/$REPOSITORY
        latest_image_tag=$prefix:latest
        commit_hash_image_tag=$prefix:$commit_hash
        
        docker build -t $latest_image_tag -t $commit_hash_image_tag .
        docker push $commit_hash_image_tag
        
        if [ ${git_branch} == 'docker' ]
        then
          docker push $latest_image_tag
        fi

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build, tag, and push docker image to Amazon ECR Public
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        REGISTRY_ALIAS: b7s9m2k8
        REPOSITORY: aws-cloudformation/cfn-guard
      run: |
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        git_branch=${GITHUB_REF#refs/heads/}
        commit_hash=${git_branch}.${git_hash}
        
        prefix=$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY
        latest_image_tag=$prefix:latest
        commit_hash_image_tag=$prefix:$commit_hash
        
        docker build -t $latest_image_tag -t $commit_hash_image_tag .
        docker push $commit_hash_image_tag
        
        if [ ${git_branch} == 'docker' ]
        then
          docker push $latest_image_tag
        fi