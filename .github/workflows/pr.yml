name: Rust

on:
  push:
    branches: [ rules-registry-integration-tests  ]
  pull_request:
    branches: [ rules-registry-integration-tests  ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
  
  shellcheck:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Shellcheck
      run: shellcheck install-guard.sh

  formatting:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

  aws-guard-rules-registry-ubuntu-integration-tests:
    name: Integration tests against aws-guard-rules-registry on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout cfn-guard
        with:
          path: cloudformation-guard
      - name: Build binary
        run: |
          cd cloudformation-guard
          cargo build --release
      - uses: actions/checkout@v3
        name: Checkout aws-guard-rules-registry
        with:
          repository: aws-cloudformation/aws-guard-rules-registry
          path: aws-guard-rules-registry
      - name: Run integration test
        run: |
          cloudformation-guard/target/release/cfn-guard test -d aws-guard-rules-registry/rules
          STATUS_CODE=$?
          if [ $STATUS_CODE -ne 0 ]; then
              echo "The aws-guard-rules-registry integration tests with Ubuntu have failed."
              exit 1
          else
              echo "The aws-guard-rules-registry integration tests with Ubuntu have passed."
          fi